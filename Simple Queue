#include <bits/stdc++.h>
using namespace std;
#define n 5

class squeue
{
    int q[n];
    int front=-1,rear=-1;
public:
    bool isempty();
    bool isfull();
    void enqueue();
    void dequeue();
    void display();
};

bool squeue::isempty()
{
    if (rear==-1)
        return true;
    return false;
}

bool squeue::isfull()
{
    if (rear==n-1)
        return true;
    return false;
}

void squeue::enqueue()
{
    if (isfull())
    {
        cout<<"\nQueue is Full!\n";
        cout<<"\nFront="<<front<<"\nRear="<<rear<<endl;
        return;
    }
    cout<<"\nEnter number to insert::";
    int num;
    cin>>num;

    if (isempty())
    {
        rear=front=0;
    }
    else
    {
        rear++;
    }
    q[rear]=num;

    display();
    cout<<"\nFront="<<front<<"\nRear="<<rear<<endl;
}

void squeue::dequeue()
{
    if (isempty())
    {
        cout<<"\nQueue is empty!\n";
        cout<<"\nFront="<<front<<"\nRear="<<rear<<endl;
        return;
    }
    if (rear==front)
    {
        rear=front=-1;
    }
    else
    {
        front++;
    }

    display();
    cout<<"\nFront="<<front<<"\nRear="<<rear<<endl;

}

void squeue::display()
{
    if (isempty())
    {
        cout<<"\nQueue is empty!\n";
        return;
    }

    for (int i = front; i < rear; ++i)
    {
        cout<<q[i]<<" ";
    }
    cout<<q[rear]<<endl;
}


int main()
{
    squeue s;

    while (1)
    {
        cout << "\n1)Enqueue"
                "\n2)Dequeue"
                "\n3)Display"
                "\n4)Exit\n";

        cout << "\nEnter choice::";
        int choice;
        cin >> choice;

        switch (choice) {
            case 1: {
                s.enqueue();
                break;
            }
            case 2: {
                s.dequeue();
                break;
            }
            case 3: {
                s.display();
                break;
            }
            case 4: {
                cout << "\n\nThank you!\n\n";
                return 0;
            }
            default: {
                cout << "\n\nInvalid Input!\n\n";
                break;
            }

        }
    }
}
